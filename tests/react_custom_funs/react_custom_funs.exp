Error -------------------------------------------------------------------------------------------- clone_element.js:20:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either function type [1] requires another argument from call of method `cloneElement` [2].
 - Or function type [3] requires another argument from call of method `cloneElement` [2].
 - Or function type [4] requires another argument from call of method `cloneElement` [2].
 - Or function type [5] requires another argument from call of method `cloneElement` [2].

   clone_element.js:20:7
    20| React.cloneElement(); // Error: Needs a minimum of two arguments.
              ^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:249:6
             v-----------------------------------------------
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
   250|     element: E,
   251|     props?: ?Partial<$JSXIntrinsics[C]['props']>,
   252|     ...children: $ReadOnlyArray<React$Node>
   253|   ) => E)
          -----^ [1]
   clone_element.js:20:1
    20| React.cloneElement(); // Error: Needs a minimum of two arguments.
        ^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:254:6
             v----------------------------------------------------------------------
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
   255|     element: E,
   256|     props?: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
   257|   ) => E)
          -----^ [3]
   <BUILTINS>/react.js:258:6
             v----------------------------------------------------------------------
   258|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
   259|     element: E,
   260|     props: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
   261|     children: NoInfer<Props>['children']
   262|   ) => E)
          -----^ [4]
   <BUILTINS>/react.js:263:6
             v----------------------------------------------------------------------
   263|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
   264|     element: E,
   265|     props: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
   266|     firstChild: NoInfer<Props>['children'][0],
   267|     secondChild: NoInfer<Props>['children'][1],
   268|     ...restChildren: NoInfer<Props>['children'] extends [+first: mixed, +second: mixed, ...infer Rest] ? Rest : NoInfer<Props>['children']
   269|   ) => E);
          -----^ [5]


Error -------------------------------------------------------------------------------------------- clone_element.js:21:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either string [1] is incompatible with `React.Element` [2].
 - Or string [1] is incompatible with `React.Element` [3].
 - Or string [1] is incompatible with `React.Element` [4].
 - Or string [1] is incompatible with `React.Element` [5].

   clone_element.js:21:7
    21| React.cloneElement('nope'); // Error: Not a valid element type.
              ^^^^^^^^^^^^

References:
   clone_element.js:21:20
    21| React.cloneElement('nope'); // Error: Not a valid element type.
                           ^^^^^^ [1]
   <BUILTINS>/react.js:249:36
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                                           ^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:254:52
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:258:52
   258|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [4]
   <BUILTINS>/react.js:263:52
   263|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [5]


Error -------------------------------------------------------------------------------------------- clone_element.js:22:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either object literal [1] is incompatible with `React.Element` [2].
 - Or object literal [1] is incompatible with `React.Element` [3].
 - Or object literal [1] is incompatible with `React.Element` [4].
 - Or object literal [1] is incompatible with `React.Element` [5].

   clone_element.js:22:7
    22| React.cloneElement({ type: any }); // Error: Not a valid element type.
              ^^^^^^^^^^^^

References:
   clone_element.js:22:20
    22| React.cloneElement({ type: any }); // Error: Not a valid element type.
                           ^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:249:36
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                                           ^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:254:52
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:258:52
   258|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [4]
   <BUILTINS>/react.js:263:52
   263|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [5]


Error -------------------------------------------------------------------------------------------- clone_element.js:26:8

Cannot call `React.cloneElement` because `A` [1] is incompatible with `B` [2] in type argument `C` [3].
[incompatible-call]

   clone_element.js:26:8
    26| (React.cloneElement(a): Element<Class<B>>); // Error: A ~> B
               ^^^^^^^^^^^^

References:
   clone_element.js:14:30
    14| declare var a: Element<Class<A>>;
                                     ^ [1]
   clone_element.js:26:39
    26| (React.cloneElement(a): Element<Class<B>>); // Error: A ~> B
                                              ^ [2]
   <BUILTINS>/react.js:352:32
   352|   declare export type Element<+C, +P = React$ElementProps<C>> = React$Element<C, P>;
                                       ^ [3]


Error -------------------------------------------------------------------------------------------- clone_element.js:32:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either property `bar` is missing in object type [1] but exists in object literal [2].
 - Or property `bar` is missing in object type [3] but exists in object literal [2].
 - Or property `bar` is missing in object type [4] but exists in object literal [2].

   clone_element.js:32:7
    32| React.cloneElement(a, {foo: 1, bar: 2}); // Error: `bar` is extra
              ^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:256:32
   256|     props?: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   clone_element.js:32:23
    32| React.cloneElement(a, {foo: 1, bar: 2}); // Error: `bar` is extra
                              ^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:260:31
   260|     props: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:265:31
   265|     props: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:33:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either string [1] is incompatible with number [2] in property `foo`.
 - Or statics of `A` [3] is incompatible with string [4].

   clone_element.js:33:7
    33| React.cloneElement(a, {foo: '1'}); // Error: `foo` is a number.
              ^^^^^^^^^^^^

References:
   clone_element.js:33:29
    33| React.cloneElement(a, {foo: '1'}); // Error: `foo` is a number.
                                    ^^^ [1]
   clone_element.js:6:39
     6| class A extends React.Component<{foo: number}, void> {}
                                              ^^^^^^ [2]
   clone_element.js:14:24
    14| declare var a: Element<Class<A>>;
                               ^^^^^^^^ [3]
   <BUILTINS>/react-dom.js:167:4
   167|   [string]: ReactDOM$HTMLElementJSXIntrinsic,
           ^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:39:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either string [1] is incompatible with number [2] in property `foo`.
 - Or statics of `B` [3] is incompatible with string [4].

   clone_element.js:39:7
    39| React.cloneElement(b, {foo: '1'}); // Error: `foo` is a number.
              ^^^^^^^^^^^^

References:
   clone_element.js:39:29
    39| React.cloneElement(b, {foo: '1'}); // Error: `foo` is a number.
                                    ^^^ [1]
   clone_element.js:7:39
     7| class B extends React.Component<{foo: number, bar: number}, void> {}
                                              ^^^^^^ [2]
   clone_element.js:15:24
    15| declare var b: Element<Class<B>>;
                               ^^^^^^^^ [3]
   <BUILTINS>/react-dom.js:167:4
   167|   [string]: ReactDOM$HTMLElementJSXIntrinsic,
           ^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:45:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either string [1] is incompatible with number [2] in property `children`.
 - Or statics of `C` [3] is incompatible with string [4].

   clone_element.js:45:7
    45| React.cloneElement(c, {children: '42'}); // Error: `children` is a number.
              ^^^^^^^^^^^^

References:
   clone_element.js:45:34
    45| React.cloneElement(c, {children: '42'}); // Error: `children` is a number.
                                         ^^^^ [1]
   clone_element.js:8:44
     8| class C extends React.Component<{children: number}, void> {}
                                                   ^^^^^^ [2]
   clone_element.js:16:24
    16| declare var c: Element<Class<C>>;
                               ^^^^^^^^ [3]
   <BUILTINS>/react-dom.js:167:4
   167|   [string]: ReactDOM$HTMLElementJSXIntrinsic,
           ^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:49:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either no more than 2 arguments are expected by function type [1].
 - Or no more than 3 arguments are expected by function type [2].
 - Or property `0` is missing in `Number` [3].

   clone_element.js:49:7
    49| React.cloneElement(c, {}, 1, 2, 3); // Error: `children` is not an array.
              ^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:254:6
             v----------------------------------------------------------------------
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
   255|     element: E,
   256|     props?: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
   257|   ) => E)
          -----^ [1]
   <BUILTINS>/react.js:258:6
             v----------------------------------------------------------------------
   258|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
   259|     element: E,
   260|     props: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
   261|     children: NoInfer<Props>['children']
   262|   ) => E)
          -----^ [2]
   clone_element.js:8:44
     8| class C extends React.Component<{children: number}, void> {}
                                                   ^^^^^^ [3]


Error -------------------------------------------------------------------------------------------- clone_element.js:50:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either statics of `C` [1] is incompatible with key set [2] in type argument `ElementType` [3].
 - Or no more than 2 arguments are expected by function type [4].

   clone_element.js:50:7
    50| React.cloneElement(c, undefined, 1, 2, 3); // Error: `children` is not an array.
              ^^^^^^^^^^^^

References:
   clone_element.js:16:24
    16| declare var c: Element<Class<C>>;
                               ^^^^^^^^ [1]
   <BUILTINS>/react.js:249:10
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                 ^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:147:36
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                           ^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:254:6
             v----------------------------------------------------------------------
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
   255|     element: E,
   256|     props?: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
   257|   ) => E)
          -----^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:51:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either statics of `C` [1] is incompatible with key set [2] in type argument `ElementType` [3].
 - Or no more than 2 arguments are expected by function type [4].

   clone_element.js:51:7
    51| React.cloneElement(c, null, 1, 2, 3); // Error: `children` is not an array.
              ^^^^^^^^^^^^

References:
   clone_element.js:16:24
    16| declare var c: Element<Class<C>>;
                               ^^^^^^^^ [1]
   <BUILTINS>/react.js:249:10
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                 ^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:147:36
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                           ^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:254:6
             v----------------------------------------------------------------------
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
   255|     element: E,
   256|     props?: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
   257|   ) => E)
          -----^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:55:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either number [1] is incompatible with array type [2] in property `children`.
 - Or statics of `D` [3] is incompatible with string [4].

   clone_element.js:55:7
    55| React.cloneElement(d, {children: 42}); // Error: `children` is an array.
              ^^^^^^^^^^^^

References:
   clone_element.js:55:34
    55| React.cloneElement(d, {children: 42}); // Error: `children` is an array.
                                         ^^ [1]
   clone_element.js:9:44
     9| class D extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]
   clone_element.js:17:24
    17| declare var d: Element<Class<D>>;
                               ^^^^^^^^ [3]
   <BUILTINS>/react-dom.js:167:4
   167|   [string]: ReactDOM$HTMLElementJSXIntrinsic,
           ^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:57:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either number [1] is incompatible with array type [2].
 - Or no more than 2 arguments are expected by function type [3].

   clone_element.js:57:7
    57| React.cloneElement(d, {}, 42); // Error: `children` is an array.
              ^^^^^^^^^^^^

References:
   clone_element.js:57:27
    57| React.cloneElement(d, {}, 42); // Error: `children` is an array.
                                  ^^ [1]
   clone_element.js:9:44
     9| class D extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:254:6
             v----------------------------------------------------------------------
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
   255|     element: E,
   256|     props?: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
   257|   ) => E)
          -----^ [3]


Error -------------------------------------------------------------------------------------------- clone_element.js:58:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either statics of `D` [1] is incompatible with key set [2] in type argument `ElementType` [3].
 - Or number [4] is incompatible with array type [5].

   clone_element.js:58:7
    58| React.cloneElement(d, undefined, 42); // Error: `children` is an array.
              ^^^^^^^^^^^^

References:
   clone_element.js:17:24
    17| declare var d: Element<Class<D>>;
                               ^^^^^^^^ [1]
   <BUILTINS>/react.js:249:10
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                 ^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:147:36
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                           ^^^^^^^^^^^ [3]
   clone_element.js:58:34
    58| React.cloneElement(d, undefined, 42); // Error: `children` is an array.
                                         ^^ [4]
   clone_element.js:9:44
     9| class D extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [5]


Error -------------------------------------------------------------------------------------------- clone_element.js:59:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either statics of `D` [1] is incompatible with key set [2] in type argument `ElementType` [3].
 - Or number [4] is incompatible with array type [5].

   clone_element.js:59:7
    59| React.cloneElement(d, null, 42); // Error: `children` is an array.
              ^^^^^^^^^^^^

References:
   clone_element.js:17:24
    17| declare var d: Element<Class<D>>;
                               ^^^^^^^^ [1]
   <BUILTINS>/react.js:249:10
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                 ^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:147:36
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                           ^^^^^^^^^^^ [3]
   clone_element.js:59:29
    59| React.cloneElement(d, null, 42); // Error: `children` is an array.
                                    ^^ [4]
   clone_element.js:9:44
     9| class D extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [5]


Error -------------------------------------------------------------------------------------------- clone_element.js:71:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either string [1] is incompatible with number [2] in property `p`.
 - Or function [3] is incompatible with string [4].

   clone_element.js:71:7
    71| React.cloneElement(<SFC p={0} />, { p: "bad" }); // Error: string ~> number
              ^^^^^^^^^^^^

References:
   clone_element.js:71:40
    71| React.cloneElement(<SFC p={0} />, { p: "bad" }); // Error: string ~> number
                                               ^^^^^ [1]
   clone_element.js:70:26
    70| function SFC(props: { p: number }) { return null };
                                 ^^^^^^ [2]
   clone_element.js:70:1
    70| function SFC(props: { p: number }) { return null };
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react-dom.js:167:4
   167|   [string]: ReactDOM$HTMLElementJSXIntrinsic,
           ^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:77:7

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either property `bar` is missing in object type [1] but exists in object literal [2].
 - Or property `bar` is missing in object type [3] but exists in object literal [2].
 - Or property `bar` is missing in object type [4] but exists in object literal [2].

   clone_element.js:77:7
    77| React.cloneElement(exact, {foo: 1, bar: 2}); // ERROR
              ^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:256:32
   256|     props?: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   clone_element.js:77:27
    77| React.cloneElement(exact, {foo: 1, bar: 2}); // ERROR
                                  ^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:260:31
   260|     props: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:265:31
   265|     props: ?Partial<$ReadOnly<{|...$Exact<NoInfer<Props>>, key: React$Key, ref: ?React$Ref<NoInfer<C>>|}>>,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]


Error -------------------------------------------------------------------------------------------- clone_element.js:93:9

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either AbstractComponent [1] is incompatible with key set [2] in type argument `ElementType` [3].
 - Or string [1] is incompatible with AbstractComponent [4] in type argument `ElementType` [3].
 - Or string [1] is incompatible with AbstractComponent [5] in type argument `ElementType` [3].
 - Or string [1] is incompatible with AbstractComponent [6] in type argument `ElementType` [3].

   clone_element.js:93:9
    93|   React.cloneElement(el); // ERROR
                ^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:149:49
   149| declare type React$MixedElement = React$Element<React$ElementType>;
                                                        ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:249:10
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                 ^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:147:36
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                           ^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:254:17
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]
   <BUILTINS>/react.js:258:17
   258|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [5]
   <BUILTINS>/react.js:263:17
   263|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [6]


Error -------------------------------------------------------------------------------------------- clone_element.js:94:9

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either string [1] is incompatible with AbstractComponent [2] in type argument `ElementType` [3].
 - Or string [1] is incompatible with AbstractComponent [4] in type argument `ElementType` [3].
 - Or string [1] is incompatible with AbstractComponent [5] in type argument `ElementType` [3].

   clone_element.js:94:9
    94|   React.cloneElement(el, {}); // ERROR
                ^^^^^^^^^^^^

References:
   <BUILTINS>/react.js:149:49
   149| declare type React$MixedElement = React$Element<React$ElementType>;
                                                        ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/react.js:254:17
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:147:36
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                           ^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:258:17
   258|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [4]
   <BUILTINS>/react.js:263:17
   263|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [5]


Error ------------------------------------------------------------------------------------------- clone_element.js:100:9

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either undefined [1] is incompatible with `React.Element` [2].
 - Or undefined [1] is incompatible with `React.Element` [3].
 - Or undefined [1] is incompatible with `React.Element` [4].
 - Or undefined [1] is incompatible with `React.Element` [5].

   clone_element.js:100:9
   100|   React.cloneElement(el); // ERROR
                ^^^^^^^^^^^^

References:
   clone_element.js:99:21
    99|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:249:36
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                                           ^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:254:52
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:258:52
   258|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [4]
   <BUILTINS>/react.js:263:52
   263|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [5]


Error ------------------------------------------------------------------------------------------- clone_element.js:101:9

Cannot call `React.cloneElement` because: [incompatible-call]
 - Either undefined [1] is incompatible with `React.Element` [2].
 - Or undefined [1] is incompatible with `React.Element` [3].
 - Or undefined [1] is incompatible with `React.Element` [4].
 - Or undefined [1] is incompatible with `React.Element` [5].

   clone_element.js:101:9
   101|   React.cloneElement(el, {}); // ERROR
                ^^^^^^^^^^^^

References:
   clone_element.js:99:21
    99|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:249:36
   249|   & (<C: $Keys<$JSXIntrinsics>, E: React$Element<C>>(
                                           ^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:254:52
   254|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [3]
   <BUILTINS>/react.js:258:52
   258|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [4]
   <BUILTINS>/react.js:263:52
   263|   & (<Props, C: React$AbstractComponent<empty>, E: React$Element<C, Props>>(
                                                           ^^^^^^^^^^^^^^^^^^^^^^^ [5]


Error -------------------------------------------------------------------------------------------- create_element.js:5:1

Cannot call `React.createElement` without at least 1 argument. [missing-arg]

   5| React.createElement(); // Error: Needs a minimum of two arguments.
      ^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------------------- create_element.js:7:21

Cannot call `React.createElement` because number [1] is not a React component. [not-a-component]

   7| React.createElement(42); // Error: Number is not a valid component type.
                          ^^ [1]


Error ------------------------------------------------------------------------------------------- create_element.js:7:21

Cannot instantiate `React.Element` because in type argument `ElementType`: [incompatible-type-arg]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with AbstractComponent [3].

   create_element.js:7:21
     7| React.createElement(42); // Error: Number is not a valid component type.
                            ^^ [1]

References:
   <BUILTINS>/react.js:135:5
   135|   | string
            ^^^^^^ [2]
   <BUILTINS>/react.js:136:5
   136|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------- create_element.js:9:21

Cannot call `React.createElement` because number [1] is not a React component. [not-a-component]

   9| React.createElement(42, {}); // Error: Number is not a valid component type.
                          ^^ [1]


Error ------------------------------------------------------------------------------------------- create_element.js:9:21

Cannot instantiate `React.Element` because in type argument `ElementType`: [incompatible-type-arg]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with AbstractComponent [3].

   create_element.js:9:21
     9| React.createElement(42, {}); // Error: Number is not a valid component type.
                            ^^ [1]

References:
   <BUILTINS>/react.js:135:5
   135|   | string
            ^^^^^^ [2]
   <BUILTINS>/react.js:136:5
   136|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------ create_element.js:10:21

Cannot call `React.createElement` because object literal [1] is not a React component. [not-a-component]

   10| React.createElement({}, {}); // Error: Object is not a valid component type.
                           ^^ [1]


Error ------------------------------------------------------------------------------------------ create_element.js:10:21

Cannot instantiate `React.Element` because in type argument `ElementType`: [incompatible-type-arg]
 - Either object literal [1] is incompatible with AbstractComponent [2].
 - Or object literal [1] is incompatible with string [3].

   create_element.js:10:21
    10| React.createElement({}, {}); // Error: Object is not a valid component type.
                            ^^ [1]

References:
   <BUILTINS>/react.js:136:5
   136|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:135:5
   135|   | string
            ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------- create_element.js:20:8

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:20:8
   20|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:13:52
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                                          ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:24:8

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:24:8
   24|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:14:38
   14| function B(props: {foo: number, bar: number}) { return null }
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:26:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:26:24
   26| React.createElement(A, {foo: 42}); // Error: `bar` is missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:27:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:27:24
   27| React.createElement(B, {foo: 42}); // Error: `bar` is missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:28:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:28:24
   28| React.createElement(A, undefined); // Error: `foo` and `bar` are missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:28:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:28:24
   28| React.createElement(A, undefined); // Error: `foo` and `bar` are missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:29:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:29:24
   29| React.createElement(B, undefined); // Error: `foo` and `bar` are missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:29:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:29:24
   29| React.createElement(B, undefined); // Error: `foo` and `bar` are missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:30:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:30:24
   30| React.createElement(A, null); // Error: `foo` and `bar` are missing.
                              ^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:30:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:30:24
   30| React.createElement(A, null); // Error: `foo` and `bar` are missing.
                              ^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:31:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:31:24
   31| React.createElement(B, null); // Error: `foo` and `bar` are missing.
                              ^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:31:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:31:24
   31| React.createElement(B, null); // Error: `foo` and `bar` are missing.
                              ^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:34:2

Cannot cast `React.createElement(...)` to `React.Element` because number [1] is incompatible with boolean [2] in
property `foo` of type argument `P` [3]. [incompatible-cast]

   create_element.js:34:2
    34| (React.createElement(A, {foo: 1, bar: 2}): React.Element<Class<A>, {foo: boolean, bar: number}>); // error
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   create_element.js:13:39
    13| class A extends React.Component<{foo: number, bar: number}> {}
                                              ^^^^^^ [1]
   create_element.js:34:74
    34| (React.createElement(A, {foo: 1, bar: 2}): React.Element<Class<A>, {foo: boolean, bar: number}>); // error
                                                                                 ^^^^^^^ [2]
   <BUILTINS>/react.js:147:69
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                                                            ^ [3]


Error ------------------------------------------------------------------------------------------- create_element.js:35:2

Cannot cast `React.createElement(...)` to `React.Element` because number [1] is incompatible with boolean [2] in
property `foo` of type argument `P` [3]. [incompatible-cast]

   create_element.js:35:2
    35| (React.createElement(B, {foo: 1, bar: 2}): React.Element<typeof B, {foo: boolean, bar: number}>); // error
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   create_element.js:14:25
    14| function B(props: {foo: number, bar: number}) { return null }
                                ^^^^^^ [1]
   create_element.js:35:74
    35| (React.createElement(B, {foo: 1, bar: 2}): React.Element<typeof B, {foo: boolean, bar: number}>); // error
                                                                                 ^^^^^^^ [2]
   <BUILTINS>/react.js:147:69
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                                                            ^ [3]


Error ------------------------------------------------------------------------------------------ create_element.js:36:42

Cannot get `React.createElement(...).nope` because property `nope` is missing in `React.Element` [1]. [prop-missing]

   create_element.js:36:42
   36| React.createElement(A, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
                                                ^^^^

References:
   create_element.js:36:1
   36| React.createElement(A, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------ create_element.js:37:42

Cannot get `React.createElement(...).nope` because property `nope` is missing in `React.Element` [1]. [prop-missing]

   create_element.js:37:42
   37| React.createElement(B, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
                                                ^^^^

References:
   create_element.js:37:1
   37| React.createElement(B, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- create_element.js:38:7

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:38:7
   38| React.createElement(A); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   create_element.js:38:1
   38| React.createElement(A); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:38:7

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:38:7
   38| React.createElement(A); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   create_element.js:38:1
   38| React.createElement(A); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:39:7

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:39:7
   39| React.createElement(B); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   create_element.js:39:1
   39| React.createElement(B); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:39:7

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:39:7
   39| React.createElement(B); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   create_element.js:39:1
   39| React.createElement(B); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:51:8

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:51:8
   51|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:41:52
   41| class C extends React.Component<{foo: number, bar: number}> {
                                                          ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:55:8

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:55:8
   55|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:44:38
   44| function D(props: {foo: number, bar: number}) { return null }
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:65:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:65:24
   65| React.createElement(E, {}); // Error
                              ^^ [1]

References:
   create_element.js:64:33
   64| class E extends React.Component<{children: number}> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:66:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:66:24
   66| React.createElement(E, undefined); // Error
                              ^^^^^^^^^ [1]

References:
   create_element.js:64:33
   64| class E extends React.Component<{children: number}> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:67:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:67:24
   67| React.createElement(E, null); // Error
                              ^^^^ [1]

References:
   create_element.js:64:33
   64| class E extends React.Component<{children: number}> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:71:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:71:24
   71| React.createElement(E, {}, 1, 2); // Error
                              ^^

References:
   create_element.js:71:1
   71| React.createElement(E, {}, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:72:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:72:24
   72| React.createElement(E, undefined, 1, 2); // Error
                              ^^^^^^^^^

References:
   create_element.js:72:1
   72| React.createElement(E, undefined, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:73:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:73:24
   73| React.createElement(E, null, 1, 2); // Error
                              ^^^^

References:
   create_element.js:73:1
   73| React.createElement(E, null, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:74:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:74:24
   74| React.createElement(E, {}, 1, 2, 3); // Error
                              ^^

References:
   create_element.js:74:1
   74| React.createElement(E, {}, 1, 2, 3); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:75:24

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:75:24
   75| React.createElement(E, {}, [1, 2]); // Error
                              ^^

References:
   create_element.js:75:28
   75| React.createElement(E, {}, [1, 2]); // Error
                                  ^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:76:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:76:24
   76| React.createElement(E, {}, [1, 2], [3, 4]); // Error
                              ^^

References:
   create_element.js:76:1
   76| React.createElement(E, {}, [1, 2], [3, 4]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:77:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:77:24
   77| React.createElement(E, {}, ...[]); // Error
                              ^^ [1]

References:
   create_element.js:64:33
   64| class E extends React.Component<{children: number}> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:79:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:79:24
   79| React.createElement(E, {}, ...[1, 2]); // Error
                              ^^

References:
   create_element.js:79:1
   79| React.createElement(E, {}, ...[1, 2]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:80:24

Cannot call `React.createElement` because children array or array [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:80:24
   80| React.createElement(E, {}, ...(any: Array<number>)); // Error
                              ^^

References:
   create_element.js:80:1
   80| React.createElement(E, {}, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:80:24

Cannot call `React.createElement` because undefined [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:80:24
   80| React.createElement(E, {}, ...(any: Array<number>)); // Error
                              ^^

References:
   create_element.js:80:1
   80| React.createElement(E, {}, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:82:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:82:24
   82| React.createElement(E, {}, 1, ...[2]); // Error
                              ^^

References:
   create_element.js:82:1
   82| React.createElement(E, {}, 1, ...[2]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:83:24

Cannot call `React.createElement` because children array or number [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:83:24
   83| React.createElement(E, {}, 1, ...(any: Array<number>)); // Error
                              ^^

References:
   create_element.js:83:1
   83| React.createElement(E, {}, 1, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:64:44
   64| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:86:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:86:24
   86| React.createElement(F, {}); // Error
                              ^^ [1]

References:
   create_element.js:85:33
   85| class F extends React.Component<{children: Array<number>}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:87:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:87:24
   87| React.createElement(F, undefined); // Error
                              ^^^^^^^^^ [1]

References:
   create_element.js:85:33
   85| class F extends React.Component<{children: Array<number>}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:88:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:88:24
   88| React.createElement(F, null); // Error
                              ^^^^ [1]

References:
   create_element.js:85:33
   85| class F extends React.Component<{children: Array<number>}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:89:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:89:24
   89| React.createElement(F, {}, 1); // Error
                              ^^

References:
   create_element.js:89:28
   89| React.createElement(F, {}, 1); // Error
                                  ^ [1]
   create_element.js:85:44
   85| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:90:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:90:24
   90| React.createElement(F, undefined, 1); // Error
                              ^^^^^^^^^

References:
   create_element.js:90:35
   90| React.createElement(F, undefined, 1); // Error
                                         ^ [1]
   create_element.js:85:44
   85| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:91:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:91:24
   91| React.createElement(F, null, 1); // Error
                              ^^^^

References:
   create_element.js:91:30
   91| React.createElement(F, null, 1); // Error
                                    ^ [1]
   create_element.js:85:44
   85| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:97:24

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in array element of property
`children`. [incompatible-call]

   create_element.js:97:24
   97| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                              ^^

References:
   create_element.js:97:28
   97| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                                  ^^^^^^ [1]
   create_element.js:85:50
   85| class F extends React.Component<{children: Array<number>}> {}
                                                        ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:97:24

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in array element of property
`children`. [incompatible-call]

   create_element.js:97:24
   97| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                              ^^

References:
   create_element.js:97:36
   97| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                                          ^^^^^^ [1]
   create_element.js:85:50
   85| class F extends React.Component<{children: Array<number>}> {}
                                                        ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:98:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:98:24
   98| React.createElement(F, {}, ...[]); // Error
                              ^^ [1]

References:
   create_element.js:85:33
   85| class F extends React.Component<{children: Array<number>}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:99:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:99:24
   99| React.createElement(F, {}, ...[1]); // Error
                              ^^

References:
   create_element.js:99:32
   99| React.createElement(F, {}, ...[1]); // Error
                                      ^ [1]
   create_element.js:85:44
   85| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:101:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:101:24
   101| React.createElement(F, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:85:50
    85| class F extends React.Component<{children: Array<number>}> {}
                                                         ^^^^^^ [1]
   create_element.js:85:44
    85| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:101:24

Cannot call `React.createElement` because undefined [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:101:24
   101| React.createElement(F, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:101:1
   101| React.createElement(F, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:85:44
    85| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:101:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:101:24
   101| React.createElement(F, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:101:43
   101| React.createElement(F, {}, ...(any: Array<number>)); // Error
                                                  ^^^^^^ [1]
   create_element.js:85:44
    85| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:102:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:102:24
   102| React.createElement(F, {}, 1, ...[]); // Error
                               ^^

References:
   create_element.js:102:28
   102| React.createElement(F, {}, 1, ...[]); // Error
                                   ^ [1]
   create_element.js:85:44
    85| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:104:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:104:24
   104| React.createElement(F, {}, 1, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:104:28
   104| React.createElement(F, {}, 1, ...(any: Array<number>)); // Error
                                   ^ [1]
   create_element.js:85:44
    85| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:107:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:107:24
   107| React.createElement(G, {}); // Error
                               ^^ [1]

References:
   create_element.js:106:33
   106| class G extends React.Component<{children: number | Array<number>}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:112:24

Cannot call `React.createElement` because in property `children`: [incompatible-call]
 - Either array literal [1] is incompatible with number [2] in array element.
 - Or children array [3] is incompatible with number [4].

   create_element.js:112:24
   112| React.createElement(G, {}, [1, 2], [3, 4]); // Error
                               ^^

References:
   create_element.js:112:28
   112| React.createElement(G, {}, [1, 2], [3, 4]); // Error
                                   ^^^^^^ [1]
   create_element.js:106:59
   106| class G extends React.Component<{children: number | Array<number>}> {}
                                                                  ^^^^^^ [2]
   create_element.js:112:1
   112| React.createElement(G, {}, [1, 2], [3, 4]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   create_element.js:106:44
   106| class G extends React.Component<{children: number | Array<number>}> {}
                                                   ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------- create_element.js:113:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:113:24
   113| React.createElement(G, {}, ...[]); // Error
                               ^^ [1]

References:
   create_element.js:106:33
   106| class G extends React.Component<{children: number | Array<number>}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:116:24

Cannot call `React.createElement` because in property `children`: [incompatible-call]
 - Either undefined [1] is incompatible with number [2].
 - Or undefined [1] is incompatible with array type [3].

   create_element.js:116:24
   116| React.createElement(G, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:116:1
   116| React.createElement(G, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:106:44
   106| class G extends React.Component<{children: number | Array<number>}> {}
                                                   ^^^^^^ [2]
   create_element.js:106:53
   106| class G extends React.Component<{children: number | Array<number>}> {}
                                                            ^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- create_element.js:127:25

Cannot call `React.createElement` because in property `children`: [incompatible-call]
 - Either array literal [1] is incompatible with number [2] in array element.
 - Or children array [3] is incompatible with number [4].

   create_element.js:127:25
   127| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
                                ^^

References:
   create_element.js:127:29
   127| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
                                    ^^^^^^ [1]
   create_element.js:121:61
   121| class G2 extends React.Component<{children?: number | Array<number>}> {}
                                                                    ^^^^^^ [2]
   create_element.js:127:1
   127| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   create_element.js:121:46
   121| class G2 extends React.Component<{children?: number | Array<number>}> {}
                                                     ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------- create_element.js:138:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:138:24
   138| React.createElement(H, {}); // Error
                               ^^ [1]

References:
   create_element.js:137:33
   137| class H extends React.Component<{children: NumberArrayRecursive}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:144:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:144:24
   144| React.createElement(H, {}, ...[]); // Error
                               ^^ [1]

References:
   create_element.js:137:33
   137| class H extends React.Component<{children: NumberArrayRecursive}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:147:24

Cannot call `React.createElement` because in property `children`: [incompatible-call]
 - Either undefined [1] is incompatible with number [2].
 - Or undefined [1] is incompatible with array type [3].

   create_element.js:147:24
   147| React.createElement(H, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:147:1
   147| React.createElement(H, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:136:29
   136| type NumberArrayRecursive = number | Array<NumberArrayRecursive>;
                                    ^^^^^^ [2]
   create_element.js:136:38
   136| type NumberArrayRecursive = number | Array<NumberArrayRecursive>;
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- create_element.js:155:24

Cannot call `React.createElement` because null [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:155:24
   155| React.createElement(I, {}, null); // Error
                               ^^

References:
   create_element.js:155:28
   155| React.createElement(I, {}, null); // Error
                                   ^^^^ [1]
   create_element.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:157:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:157:24
   157| React.createElement(I, {}, 1, 2); // Error
                               ^^

References:
   create_element.js:157:1
   157| React.createElement(I, {}, 1, 2); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:160:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:160:24
   160| React.createElement(I, {}, ...[1, 2]); // Error
                               ^^

References:
   create_element.js:160:1
   160| React.createElement(I, {}, ...[1, 2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:161:24

Cannot call `React.createElement` because children array or array [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:161:24
   161| React.createElement(I, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:161:1
   161| React.createElement(I, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:163:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:163:24
   163| React.createElement(I, {}, 1, ...[2]); // Error
                               ^^

References:
   create_element.js:163:1
   163| React.createElement(I, {}, 1, ...[2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:164:24

Cannot call `React.createElement` because children array or number [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:164:24
   164| React.createElement(I, {}, 1, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:164:1
   164| React.createElement(I, {}, 1, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:152:45
   152| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:167:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:167:24
   167| React.createElement(J, {}); // Error
                               ^^ [1]

References:
   create_element.js:166:33
   166| class J extends React.Component<{children: ?number}> {}
                                        ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:171:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:171:24
   171| React.createElement(J, {}, 1, 2); // Error
                               ^^

References:
   create_element.js:171:1
   171| React.createElement(J, {}, 1, 2); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:172:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:172:24
   172| React.createElement(J, {}, ...[]); // Error
                               ^^ [1]

References:
   create_element.js:166:33
   166| class J extends React.Component<{children: ?number}> {}
                                        ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:174:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:174:24
   174| React.createElement(J, {}, ...[1, 2]); // Error
                               ^^

References:
   create_element.js:174:1
   174| React.createElement(J, {}, ...[1, 2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:175:24

Cannot call `React.createElement` because children array or array [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:175:24
   175| React.createElement(J, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:175:1
   175| React.createElement(J, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:177:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:177:24
   177| React.createElement(J, {}, 1, ...[2]); // Error
                               ^^

References:
   create_element.js:177:1
   177| React.createElement(J, {}, 1, ...[2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:178:24

Cannot call `React.createElement` because children array or number [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:178:24
   178| React.createElement(J, {}, 1, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:178:1
   178| React.createElement(J, {}, 1, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:166:45
   166| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:184:24

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:184:24
   184| React.createElement(K, {}, '42'); // Error
                               ^^

References:
   create_element.js:184:28
   184| React.createElement(K, {}, '42'); // Error
                                   ^^^^ [1]
   create_element.js:180:44
   180| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:185:35

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:185:35
   185| React.createElement(K, {children: '42'}); // Error
                                          ^^^^ [1]

References:
   create_element.js:180:44
   180| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:187:24

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:187:24
   187| React.createElement(K, {children: 42}, '42'); // Error
                               ^^^^^^^^^^^^^^

References:
   create_element.js:187:40
   187| React.createElement(K, {children: 42}, '42'); // Error
                                               ^^^^ [1]
   create_element.js:180:44
   180| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:188:24

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:188:24
   188| React.createElement(K, {children: '42'}, '42'); // Error
                               ^^^^^^^^^^^^^^^^

References:
   create_element.js:188:42
   188| React.createElement(K, {children: '42'}, '42'); // Error
                                                 ^^^^ [1]
   create_element.js:180:44
   180| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:201:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:201:24
   201| React.createElement(L, {}, 1); // Error
                               ^^ [1]

References:
   create_element.js:190:33
                                        v
   190| class L extends React.Component<{
   191|   foo: number,
   192|   bar: number,
   193|   children: number,
   194| }> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:202:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:202:24
   202| React.createElement(L, {children: 1}); // Error
                               ^^^^^^^^^^^^^ [1]

References:
   create_element.js:190:33
                                        v
   190| class L extends React.Component<{
   191|   foo: number,
   192|   bar: number,
   193|   children: number,
   194| }> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:203:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:203:24
   203| React.createElement(L, {bar: 1}, 2); // Error
                               ^^^^^^^^ [1]

References:
   create_element.js:190:33
                                        v
   190| class L extends React.Component<{
   191|   foo: number,
   192|   bar: number,
   193|   children: number,
   194| }> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:204:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:204:24
   204| React.createElement(L, {bar: 1, children: 2}); // Error
                               ^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:190:33
                                        v
   190| class L extends React.Component<{
   191|   foo: number,
   192|   bar: number,
   193|   children: number,
   194| }> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:205:30

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `foo`.
[incompatible-call]

   create_element.js:205:30
   205| React.createElement(L, {foo: '1', bar: 2}, 3); // Error
                                     ^^^ [1]

References:
   create_element.js:191:8
   191|   foo: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:206:30

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `foo`.
[incompatible-call]

   create_element.js:206:30
   206| React.createElement(L, {foo: '1', bar: 2, children: 3}); // Error
                                     ^^^ [1]

References:
   create_element.js:191:8
   191|   foo: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:207:38

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:207:38
   207| React.createElement(L, {foo: 1, bar: '2'}, 3); // Error
                                             ^^^ [1]

References:
   create_element.js:192:8
   192|   bar: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:208:38

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:208:38
   208| React.createElement(L, {foo: 1, bar: '2', children: 3}); // Error
                                             ^^^ [1]

References:
   create_element.js:192:8
   192|   bar: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:209:24

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:209:24
   209| React.createElement(L, {foo: 1, bar: 2}, '3'); // Error
                               ^^^^^^^^^^^^^^^^

References:
   create_element.js:209:42
   209| React.createElement(L, {foo: 1, bar: 2}, '3'); // Error
                                                 ^^^ [1]
   create_element.js:193:13
   193|   children: number,
                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:210:51

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:210:51
   210| React.createElement(L, {foo: 1, bar: 2, children: '3'}); // Error
                                                          ^^^ [1]

References:
   create_element.js:193:13
   193|   children: number,
                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:215:22

Cannot cast `React.createElement(...)` to `React.Element` because `M` [1] is incompatible with `N` [2] in type argument
`ElementType` [3]. [incompatible-cast]

   create_element.js:215:22
   215| (React.createElement(M): React.Element<Class<N>, any>); // Error
                             ^

References:
   create_element.js:212:7
   212| class M extends React.Component<{}> {}
              ^ [1]
   create_element.js:215:46
   215| (React.createElement(M): React.Element<Class<N>, any>); // Error
                                                     ^ [2]
   <BUILTINS>/react.js:147:36
   147| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {...};
                                           ^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- create_element.js:219:24

Cannot call `React.createElement` because children array [1] has an unknown number of elements, so is incompatible with
tuple type [2] in property `children`. [invalid-tuple-arity]

   create_element.js:219:24
   219| React.createElement(P, null, 1, 2, ...(any: Array<number>)); // ERROR
                               ^^^^

References:
   create_element.js:219:1
   219| React.createElement(P, null, 1, 2, ...(any: Array<number>)); // ERROR
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:217:31
   217| declare function P({children: [1, 2]}): void;
                                      ^^^^^^ [2]



Found 117 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
